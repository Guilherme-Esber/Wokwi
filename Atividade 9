///
Crie um controlador de acesso a uma sala da UNIFEI. 
Para isso ele deve conter:
- Um teclado numérico para inserir a senha de 6 números;
- Um display que deverá mostrar o nome do usuário dono da senha;
- Um buzzer para um som agudo no acerto e grave para erro da senha;
- Um servo para abrir a porta quando a senha estiver correta;
///



#include <Keypad.h>
#include <LiquidCrystal.h>
#include <ESP32Servo.h>  // Incluindo a biblioteca ESP32Servo para controlar o servo motor

// Configurações do LCD (defina os pinos que você utilizará)
const int rs = 14, en = 27, d4 = 26, d5 = 25, d6 = 33, d7 = 32;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);  // Inicializa o LCD com os pinos configurados

// Configuração do teclado matricial
const byte ROWS = 4;  // Número de linhas do teclado
const byte COLS = 4;  // Número de colunas do teclado
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},  // Primeira linha
  {'4', '5', '6', 'B'},  // Segunda linha
  {'7', '8', '9', 'C'},  // Terceira linha
  {'*', '0', '#', 'D'}   // Quarta linha
};
byte rowPins[ROWS] = {23, 22, 21, 19};    // Pinos das linhas (defina seus pinos)
byte colPins[COLS] = {18, 5, 17, 16};     // Pinos das colunas (defina seus pinos)
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);  // Configura o teclado

// Configuração do servo motor
Servo servo;  // Instancia o objeto Servo
const int servoPin = 15;  // Pino do servo motor

// Configuração do buzzer
const int buzzerPin = 12;  // Pino do buzzer

// Configuração da senha
const String senhaCorreta = "123456";  // Senha predefinida
String senhaDigitada = "";  // Variável para armazenar a senha digitada

void setup() {
  // Inicializa os componentes
  lcd.begin(16, 2);  // Inicializa o LCD com 16 colunas e 2 linhas
  lcd.print("Acesso UNIFEI");  // Exibe a mensagem inicial
  delay(2000);  // Espera 2 segundos
  lcd.clear();  // Limpa a tela

  servo.attach(servoPin);  // Anexa o servo ao pino
  servo.write(0);  // Fecha a porta (posição 0 graus)

  pinMode(buzzerPin, OUTPUT);  // Configura o pino do buzzer como saída
}

void loop() {
  char tecla = keypad.getKey();  // Lê a tecla pressionada no teclado

  if (tecla) {  // Se uma tecla for pressionada
    if (tecla == '#') {  // Se a tecla '#' for pressionada, confirma a senha
      verificarSenha();
    } else if (tecla == '*') {  // Se a tecla '*' for pressionada, reseta a senha
      senhaDigitada = "";  // Reseta a senha digitada
      lcd.clear();  // Limpa a tela
      lcd.print("Senha resetada");  // Exibe mensagem de senha resetada
      delay(1000);  // Espera 1 segundo
      lcd.clear();  // Limpa a tela
    } else {  // Se qualquer outro número for pressionado
      senhaDigitada += tecla;  // Adiciona o número à senha digitada
      lcd.clear();  // Limpa a tela
      lcd.print("Senha: ");
      for (int i = 0; i < senhaDigitada.length(); i++) {
        lcd.print('*');  // Exibe asteriscos para a senha
      }
    }
  }
}

void verificarSenha() {
  lcd.clear();  // Limpa a tela

  if (senhaDigitada == senhaCorreta) {  // Se a senha digitada for correta
    lcd.print("Acesso Liberado");  // Exibe mensagem de acesso liberado
    tone(buzzerPin, 1000, 500);  // Emite um som agudo no buzzer
    abrirPorta();  // Abre a porta
  } else {  // Se a senha estiver errada
    lcd.print("Acesso Negado");  // Exibe mensagem de acesso negado
    tone(buzzerPin, 500, 500);   // Emite um som grave no buzzer
  }

  senhaDigitada = "";  // Reseta a senha após a verificação
  delay(2000);  // Espera 2 segundos
  lcd.clear();  // Limpa a tela
}

void abrirPorta() {
  servo.write(90);  // Abre a porta (aproximadamente 90 graus)
  delay(5000);      // Mantém a porta aberta por 5 segundos
  servo.write(0);   // Fecha a porta (aproximadamente 0 graus)
}
